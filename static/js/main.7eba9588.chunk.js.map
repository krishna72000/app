{"version":3,"sources":["app/App.js","room/UserVideo.js","room/PeerVideo.js","room/Room.js","index.js","app/Logo.svg"],"names":["App","history","useHistory","useState","roomId","setRoomId","className","src","logo","alt","onSubmit","evt","preventDefault","push","placeholder","value","onChange","e","target","type","onClick","id","Math","random","toString","substring","UserVideo","props","circleView","setCircleView","style","width","height","borderRadius","playsInline","autoPlay","muted","ref","streamRef","camEnabled","objectFit","display","PeerVideo","useRef","fillContainer","setFillContainer","setCamEnabled","micEnabled","setMicEnabled","useEffect","peer","on","stream","current","srcObject","message","msg","JSON","parse","console","log","peerId","Room","useParams","peers","setPeers","peersRef","socketRef","startTime","gridWidth","videoWidth","videoHeight","setGridLayout","micEnabledRef","camEnabledRef","callStarted","setCallStarted","callEnded","setCallEnded","callTime","setCallTime","timerRef","toast","setToast","mediaDevicesAccessible","setMediaDevicesAccessible","copyAddressToClipboard","navigator","clipboard","writeText","window","location","href","setTimeout","disconnectFromRoom","clearInterval","close","getTracks","forEach","track","stop","callTimeToString","hours","floor","minutes","seconds","hoursText","minutesText","secondsText","recalculateLayout","aspectRatio","length","innerWidth","innerHeight","videoCount","containerHeight","containerWidth","bestLayout","area","cols","rows","ceil","io","connect","mediaDevices","getUserMedia","video","audio","constraints","ideal","then","emit","users","peerObjs","userId","userToSignal","Peer","initiator","trickle","objectMode","signal","send","stringify","createPeer","time","setInterval","Date","getTime","payload","incomingSignal","addPeer","peerObj","find","p","destroy","filter","error","DetectRTC","load","hasWebcam","isWebsiteHasWebcamPermissions","hasMicrophone","isWebsiteHasMicrophonePermissions","addEventListener","removeEventListener","maxWidth","map","key","getVideoTracks","enabled","getAudioTracks","when","reload","ReactDOM","render","StrictMode","exact","path","component","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7eba9588.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport logo from \"./Logo.svg\";\nimport \"./App.css\";\n\nfunction App() {\n  const history = useHistory();\n  const [roomId, setRoomId] = useState(\"\");\n\n  const joinRoom = (evt) => {\n    evt.preventDefault();\n    history.push(roomId);\n  };\n\n  function createRoom() {\n    let id =\n      Math.random().toString(36).substring(2, 15) +\n      Math.random().toString(36).substring(2, 15);\n\n    history.push(id);\n  }\n\n  return (\n    <div className=\"App\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <form onSubmit={joinRoom}>\n        <input\n          className=\"Room-id-input\"\n          placeholder=\"Please enter room id\"\n          value={roomId}\n          onChange={(e) => setRoomId(e.target.value)}\n        ></input>\n        <button className=\"Join-room-button\" type=\"submit\">\n          Join\n        </button>\n      </form>\n      <button className=\"Create-room-button\" onClick={createRoom}>\n        Create room\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState } from \"react\";\n\nexport const UserVideo = (props) => {\n  const [circleView, setCircleView] = useState(true);\n\n  return (\n    <div\n      className=\"User-video-container\"\n      style={\n        circleView\n          ? { width: \"72px\", height: \"72px\", borderRadius: \"36px\" }\n          : { height: \"144px\", borderRadius: \"8px\" }\n      }\n    >\n      <video\n        onClick={() => setCircleView(!circleView)}\n        className=\"Video\"\n        playsInline\n        autoPlay\n        muted\n        ref={props.streamRef}\n        style={\n          props.camEnabled\n            ? circleView\n              ? {}\n              : { width: \"initial\", objectFit: \"contain\" }\n            : { display: \"none\" }\n        }\n      />\n    </div>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { MdMicOff, MdPerson } from \"react-icons/md\";\n\nexport const PeerVideo = (props) => {\n  const ref = useRef();\n  const [fillContainer, setFillContainer] = useState(true);\n  const [camEnabled, setCamEnabled] = useState(false);\n  const [micEnabled, setMicEnabled] = useState(true);\n\n  useEffect(() => {\n    props.peer.on(\"stream\", (stream) => {\n      ref.current.srcObject = stream;\n    });\n\n    props.peer.on(\"data\", (message) => {\n      let msg = JSON.parse(message);\n      console.log(props.peerId + \" state\", msg);\n\n      setCamEnabled(msg.camEnabled);\n      setMicEnabled(msg.micEnabled);\n    });\n  }, [props.peer, props.peerId]);\n\n  return ref.srcObject ? (\n    <></>\n  ) : (\n    <div\n      className=\"Peer-video-container\"\n      style={{\n        width: props.width + \"px\",\n        height: props.height + \"px\",\n      }}\n    >\n      <video\n        onClick={() => setFillContainer(!fillContainer)}\n        className=\"Video\"\n        playsInline\n        autoPlay\n        ref={ref}\n        style={fillContainer ? {} : { objectFit: \"contain\" }}\n      />\n\n      {!camEnabled && (\n        <div className=\"Peer-video-placeholder\">\n          <MdPerson className=\"Peer-video-placeholder-icon\" />\n        </div>\n      )}\n\n      {!micEnabled && <MdMicOff className=\"Peer-video-muted-icon\" />}\n    </div>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { Prompt, useHistory, useParams } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport DetectRTC from \"detectrtc\";\nimport {\n  MdMic,\n  MdMicOff,\n  MdVideocam,\n  MdVideocamOff,\n  MdPersonAdd,\n  MdCallEnd,\n} from \"react-icons/md\";\nimport { UserVideo } from \"./UserVideo\";\nimport { PeerVideo } from \"./PeerVideo\";\nimport \"./Room.css\";\n\nfunction Room() {\n  const history = useHistory();\n\n  // Call state\n  const { roomId } = useParams();\n  const [peers, setPeers] = useState([]);\n  const peersRef = useRef([]);\n  const socketRef = useRef();\n  const streamRef = useRef();\n  const startTime = useRef();\n\n  // UI state\n  const [{ gridWidth, videoWidth, videoHeight }, setGridLayout] = useState({\n    gridWidth: 0,\n    videoWidth: 0,\n    videoHeight: 0,\n  });\n  const [micEnabled, setMicEnabled] = useState(true);\n  const micEnabledRef = useRef(true);\n  const [camEnabled, setCamEnabled] = useState(true);\n  const camEnabledRef = useRef(true);\n  const [callStarted, setCallStarted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [callTime, setCallTime] = useState(0);\n  const timerRef = useRef();\n  const [toast, setToast] = useState(null);\n  const [mediaDevicesAccessible, setMediaDevicesAccessible] = useState(true);\n\n  useEffect(() => {\n    socketRef.current = io.connect(\"/\");\n    window.mediaDevices\n      .getUserMedia({\n        video: true,\n        audio: true,\n        constraints: {\n          video: {\n            width: { ideal: 4096 },\n            height: { ideal: 2160 },\n          },\n        },\n      })\n      .then(\n        (stream) => {\n          if (streamRef.current) streamRef.current.srcObject = stream;\n\n          socketRef.current.emit(\"joinRoom\", roomId);\n\n          socketRef.current.on(\"otherUsersInRoom\", (users) => {\n            const peerObjs = [];\n            users.forEach((userId) => {\n              const peer = createPeer(userId, socketRef.current.id, stream);\n              peersRef.current.push({\n                peerId: userId,\n                peer,\n              });\n              peerObjs.push({\n                peerId: userId,\n                peer,\n              });\n            });\n            setPeers(peerObjs);\n            recalculateLayout();\n\n            console.log(\"Joined room with users\", users);\n          });\n\n          socketRef.current.on(\"startTimer\", (time) => {\n            setCallStarted(true);\n\n            startTime.current = time;\n\n            timerRef.current = setInterval(() => {\n              setCallTime(new Date().getTime() - startTime.current);\n            }, 1000);\n          });\n\n          socketRef.current.on(\"userJoined\", (payload) => {\n            const peer = addPeer(payload.signal, payload.userId, stream);\n\n            const peerObj = {\n              peerId: payload.userId,\n              peer,\n            };\n\n            peersRef.current.push(peerObj);\n            setPeers([...peersRef.current]);\n            recalculateLayout();\n\n            console.log(\"User joined the room\", payload.userId);\n          });\n\n          socketRef.current.on(\"signalReceived\", (payload) => {\n            const item = peersRef.current.find((p) => p.peerId === payload.id);\n            item.peer.signal(payload.signal);\n          });\n\n          socketRef.current.on(\"userLeft\", (id) => {\n            const peerObj = peersRef.current.find((p) => p.peerId === id);\n            if (peerObj) {\n              peerObj.peer.destroy();\n            }\n            const peerObjs = peersRef.current.filter((p) => p.peerId !== id);\n\n            peersRef.current = peerObjs;\n            setPeers(peerObjs);\n            recalculateLayout();\n\n            console.log(\"User left the room\", id);\n\n            if (peersRef.current.length === 0) disconnectFromRoom();\n          });\n        },\n        (error) => {\n          DetectRTC.load(() => {\n            if (\n              !DetectRTC.hasWebcam ||\n              !DetectRTC.isWebsiteHasWebcamPermissions ||\n              !DetectRTC.hasMicrophone ||\n              !DetectRTC.isWebsiteHasMicrophonePermissions\n            ) {\n              setMediaDevicesAccessible(false);\n            }\n          });\n        }\n      );\n\n    function createPeer(userToSignal, userId, stream) {\n      const peer = new Peer({\n        initiator: true,\n        trickle: false,\n        objectMode: true,\n        stream,\n      });\n\n      peer.on(\"signal\", (signal) => {\n        socketRef.current.emit(\"signal\", {\n          userToSignal,\n          userId,\n          signal,\n        });\n      });\n\n      peer.on(\"connect\", () =>\n        peer.send(\n          JSON.stringify({\n            camEnabled: camEnabledRef.current,\n            micEnabled: micEnabledRef.current,\n          })\n        )\n      );\n\n      return peer;\n    }\n\n    function addPeer(incomingSignal, userId, stream) {\n      const peer = new Peer({\n        initiator: false,\n        trickle: false,\n        objectMode: true,\n        stream,\n      });\n\n      peer.on(\"signal\", (signal) => {\n        socketRef.current.emit(\"signalBack\", { signal, userId });\n      });\n\n      peer.on(\"connect\", () =>\n        peer.send(\n          JSON.stringify({\n            camEnabled: camEnabledRef.current,\n            micEnabled: micEnabledRef.current,\n          })\n        )\n      );\n\n      peer.signal(incomingSignal);\n\n      return peer;\n    }\n\n    window.addEventListener(\"resize\", recalculateLayout);\n\n    return () => {\n      window.removeEventListener(\"resize\", recalculateLayout);\n    };\n  }, [roomId]);\n\n  function copyAddressToClipboard() {\n    navigator.clipboard.writeText(window.location.href);\n\n    setToast(\"Room link has been copied to clipboard!\");\n    setTimeout(() => setToast(null), 3000);\n  }\n\n  function toggleCam() {\n    peersRef.current.forEach((peerObj) => {\n      peerObj.peer.send(\n        JSON.stringify({ camEnabled: !camEnabled, micEnabled })\n      );\n    });\n\n    streamRef.current.srcObject.getVideoTracks()[0].enabled = !streamRef.current.srcObject.getVideoTracks()[0]\n      .enabled;\n    camEnabledRef.current = !camEnabledRef.current;\n    setCamEnabled(camEnabledRef.current);\n  }\n\n  function toggleMic() {\n    peersRef.current.forEach((peerObj) => {\n      peerObj.peer.send(\n        JSON.stringify({ camEnabled, micEnabled: !micEnabled })\n      );\n    });\n\n    streamRef.current.srcObject.getAudioTracks()[0].enabled = !streamRef.current.srcObject.getAudioTracks()[0]\n      .enabled;\n    micEnabledRef.current = !micEnabledRef.current;\n    setMicEnabled(micEnabledRef.current);\n  }\n\n  function disconnectFromRoom() {\n    clearInterval(timerRef.current);\n    socketRef.current.close();\n    socketRef.current.srcObject &&\n      streamRef.current.srcObject.getTracks().forEach((track) => {\n        track.stop();\n      });\n    peersRef.current = [];\n    setPeers([]);\n\n    setCallEnded(true);\n    console.log(\"Disconnected from room\");\n  }\n\n  function callTimeToString() {\n    var hours = Math.floor(callTime / 3600000);\n    var minutes = Math.floor((callTime - hours * 3600000) / 60000);\n    var seconds = Math.floor(\n      (callTime - hours * 3600000 - minutes * 60000) / 1000\n    );\n\n    var hoursText = \"\";\n    var minutesText = minutes + \":\";\n    var secondsText = seconds.toString();\n\n    if (hours > 0) {\n      hoursText = hours + \":\";\n    }\n    if (minutes < 10) {\n      minutesText = \"0\" + minutes + \":\";\n    }\n    if (seconds < 10) {\n      secondsText = \"0\" + seconds;\n    }\n    return hoursText + minutesText + secondsText;\n  }\n\n  function recalculateLayout() {\n    const aspectRatio =\n      peersRef.current.length === 1\n        ? window.innerWidth / window.innerHeight\n        : 4 / 3;\n    const videoCount = peersRef.current.length;\n    const containerHeight = window.innerHeight;\n    const containerWidth = window.innerWidth;\n\n    let bestLayout = {\n      area: 0,\n      cols: 0,\n      rows: 0,\n      width: 0,\n      height: 0,\n    };\n\n    for (let cols = 1; cols <= videoCount; cols++) {\n      const rows = Math.ceil(videoCount / cols);\n      const hScale = containerWidth / (cols * aspectRatio);\n      const vScale = containerHeight / rows;\n      let width;\n      let height;\n      if (hScale <= vScale) {\n        width = Math.floor(containerWidth / cols);\n        height = Math.floor(width / aspectRatio);\n      } else {\n        height = Math.floor(containerHeight / rows);\n        width = Math.floor(height * aspectRatio);\n      }\n      const area = width * height;\n      if (area > bestLayout.area) {\n        bestLayout = {\n          area,\n          width,\n          height,\n          rows,\n          cols,\n        };\n      }\n    }\n\n    setGridLayout({\n      gridWidth: bestLayout.width * bestLayout.cols,\n      videoWidth: bestLayout.width,\n      videoHeight: bestLayout.height,\n    });\n  }\n\n  return (\n    <div className=\"Room\">\n      {mediaDevicesAccessible && (\n        <>\n          {!callEnded && (\n            <>\n              {!callStarted && (\n                <div>\n                  <div className=\"Waiting-text\">Waiting for peers...</div>\n                  <button\n                    onClick={copyAddressToClipboard}\n                    className=\"Invite-button\"\n                  >\n                    Invite people\n                  </button>\n                </div>\n              )}\n\n              {callStarted && (\n                <div className=\"Grid\" style={{ maxWidth: gridWidth + \"px\" }}>\n                  {peers.map((peer) => {\n                    return (\n                      <PeerVideo\n                        key={peer.peerId}\n                        peer={peer.peer}\n                        peerId={peer.peerId}\n                        width={videoWidth}\n                        height={videoHeight}\n                      />\n                    );\n                  })}\n                </div>\n              )}\n\n              <UserVideo streamRef={streamRef} camEnabled={camEnabled} />\n\n              <div className=\"Call-time\">{callTimeToString()}</div>\n\n              <div className=\"Buttons-container\">\n                <button onClick={copyAddressToClipboard} className=\"Button\">\n                  <MdPersonAdd />\n                </button>\n                <button className=\"Button\" onClick={toggleCam}>\n                  {camEnabled ? <MdVideocam /> : <MdVideocamOff />}\n                </button>\n                <button className=\"Button\" onClick={toggleMic}>\n                  {micEnabled ? <MdMic /> : <MdMicOff />}\n                </button>\n                <button\n                  className=\"Button Endcall-button\"\n                  onClick={disconnectFromRoom}\n                >\n                  <MdCallEnd />\n                </button>\n              </div>\n\n              {toast && <div className=\"Toast\">{toast}</div>}\n\n              <Prompt when={true} message={() => disconnectFromRoom()} />\n            </>\n          )}\n\n          {callEnded && (\n            <div>\n              <div className=\"Call-ended-text\">The call has ended</div>\n              <div className=\"Call-time-text\">\n                Duration: {callTimeToString()}\n              </div>\n\n              <br></br>\n\n              <button\n                className=\"Reconnect-button\"\n                onClick={() => window.location.reload()}\n              >\n                Reconnect to call\n              </button>\n              <br></br>\n              <button className=\"Home-button\" onClick={() => history.push(\"/\")}>\n                Back to home\n              </button>\n            </div>\n          )}\n        </>\n      )}\n\n      {!mediaDevicesAccessible && (\n        <div>\n          <div className=\"Device-error-text\">Device error</div>\n          <div className=\"Device-error-description-text\">\n            Please connect a mic and a webcam, grant the required permissions,\n            then reload the page\n          </div>\n\n          <br></br>\n\n          <button\n            className=\"Reload-button\"\n            onClick={() => window.location.reload()}\n          >\n            Reload page\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Room;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./index.css\";\n\nimport App from \"./app/App\";\nimport Room from \"./room/Room\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/:roomId\" component={Room} />\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/Logo.5d5d9eef.svg\";"],"sourceRoot":""}